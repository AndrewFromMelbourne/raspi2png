name: Create Draft GitHub Release

# Event: Merging Changelog PR (see 'check-should-run')
on:
  pull_request:
    types: [closed]

jobs:
  check-should-run:
    runs-on: ubuntu-20.04
    outputs:
      should_run: ${{ steps.check_should_run.outputs.should_run }}
    steps:
      - name: Set 'should run' variable
        id: check_should_run
        env:
          CI_CHANGELOG_BUMP_BRANCH: ${{ secrets.CI_CHANGELOG_BUMP_BRANCH }}
          PR_MERGED: ${{ github.event.pull_request.merged }}
        run: |
          if [[ "${GITHUB_HEAD_REF}" == "${CI_CHANGELOG_BUMP_BRANCH}" ]] && [[ "${PR_MERGED}" == "true" ]]; then
            conditions_met="true"
          else
            conditions_met="false"
          fi
          echo "::set-output name=should_run::${conditions_met}"

  build-debian:
    needs: check-should-run
    if: needs.check-should-run.outputs.should_run == 'true'
    runs-on: ubuntu-20.04
    steps:
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v1.2.1

      - name: Checkout code
        uses: actions/checkout@v2.2.0

      - name: Build Debian package
        run: |
          mkdir -p /tmp/artifacts/{src,bin}
          docker run --privileged --rm docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
          docker run --rm \
            --volume ${{ github.workspace }}:/src \
            --volume /tmp/artifacts/bin:/build \
            -e LINTIAN_TAGS_TO_SUPPRESS="package-supports-alternative-init-but-no-init.d-script" \
            --platform=linux/arm/v7 \
            pitop/deb-build:latest

      - name: Separate Debian source package files from binary
        run: |
          mv /tmp/artifacts/bin/* /tmp/artifacts/src/
          mv /tmp/artifacts/src/*.deb /tmp/artifacts/bin/

      - name: Upload Debian source package files
        uses: actions/upload-artifact@v2
        with:
          name: "${{ env.GITHUB_REPOSITORY_NAME }}-#${{ env.GITHUB_SHA_SHORT }}-deb-src"
          path: "/tmp/artifacts/src/"

      - name: Upload Debian binary packages
        uses: actions/upload-artifact@v2
        with:
          name: "${{ env.GITHUB_REPOSITORY_NAME }}-#${{ env.GITHUB_SHA_SHORT }}-deb"
          path: "/tmp/artifacts/bin/"

  create-draft-release:
    runs-on: ubuntu-20.04
    needs: build-debian
    steps:
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v1.2.1

      - name: Checkout code
        uses: actions/checkout@v2.2.0

      - name: Download Debian binary artifacts
        uses: actions/download-artifact@v2
        with:
            name: "${{ env.GITHUB_REPOSITORY_NAME }}-#${{ env.GITHUB_SHA_SHORT }}-deb"
            path: "./deb/"

      - name: Download Debian source artifacts
        uses: actions/download-artifact@v2
        with:
            name: "${{ env.GITHUB_REPOSITORY_NAME }}-#${{ env.GITHUB_SHA_SHORT }}-deb-src"
            path: "./deb-src/"

      - name: Determine version
        run: |
          sudo apt install -y dpkg-dev
          echo "VERSION=$(dpkg-parsechangelog -Sversion)" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "v${{ env.VERSION }}"
          draft: true
          prerelease: false
          body: ${{ secrets.GH_RELEASE_BODY_TEXT }}
          files: |
            ./deb/*
            ./deb-src/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
